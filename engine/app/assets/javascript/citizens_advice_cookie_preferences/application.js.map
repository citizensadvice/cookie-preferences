{
  "version": 3,
  "sources": ["../../../javascript/citizens_advice_cookie_preferences/components/cookie-banner.js", "../../../javascript/citizens_advice_cookie_preferences/application.js"],
  "sourcesContent": ["const selectors = {\n  cookieBanner: \".js-cookie-banner\",\n  acceptBtn: \"#js-cookie-banner__button-accept\",\n  rejectBtn: \"#js-cookie-banner__button-reject\",\n  cookieSelectionContainer: \".js-cookie-banner__selection-container\",\n  confirmationMessageContainer: \".js-cookie-banner__confirmation-message\",\n  confirmationMessageAccept: \".js-cookie-banner__confirmation-accept\",\n  confirmationMessageReject: \".js-cookie-banner__confirmation-reject\",\n  hideBannerBtn: \"#js-cookie-banner__button-hide\"\n};\n\nconst cookieBanner = document.querySelector(selectors.cookieBanner);\n\nfunction setCookie(cname, cvalue, exdays) {\n  // set expiry date in milliseconds\n  const d = new Date();\n  d.setTime(d.getTime() + (exdays*24*60*60*1000));\n  let expires = \"expires=\"+ d.toUTCString();\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}\n\nfunction getCookie(name) {\n  const nameEQ = `${name}=`\n  const cookies = document.cookie.split(';')\n  for (let i = 0, len = cookies.length; i < len; i++) {\n    let cookie = cookies[i]\n    while (cookie.charAt(0) === ' ') {\n      cookie = cookie.substring(1, cookie.length)\n    }\n    if (cookie.indexOf(nameEQ) === 0) {\n      return decodeURIComponent(cookie.substring(nameEQ.length))\n    }\n  }\n  return null\n}\n\nconst acceptCookies = () => {\n  setCookie('cookie_preference', encodeURIComponent(JSON.stringify({\n    essential: true,\n    additional: true\n  })), 365);\n  setCookie('cookie_preference_set', true, 365);\n  showConfirmationMessage();\n  document.querySelector(selectors.confirmationMessageAccept).hidden = false;\n}\n\nconst rejectCookies = () => {\n  setCookie('cookie_preference', encodeURIComponent(JSON.stringify(DEFAULT_COOKIE_CONSENT)), 365);\n  setCookie('cookie_preference_set', true, 365);\n  showConfirmationMessage();\n  document.querySelector(selectors.confirmationMessageReject).hidden = false\n}\n\nconst DEFAULT_COOKIE_CONSENT = {\n  essential: true,\n  additional: false\n}\n\nfunction hideCookieBanner() {\n  cookieBanner.hidden = true;\n}\n\nfunction showConfirmationMessage() {\n  const confirmationMessageContainer = document.querySelector(selectors.confirmationMessageContainer);\n  document.querySelector(selectors.cookieSelectionContainer).hidden = true;\n  confirmationMessageContainer.hidden = false;\n  confirmationMessageContainer.focus();\n  cookieBanner.classList.add(\"cookie-banner--no-decoration\");\n}\n\nfunction setDefaultCookies() {\n  if(getCookie('cookie_preference_set')){\n    hideCookieBanner();\n  }else{\n    cookieBanner.hidden = false;\n    setCookie('cookie_preference', encodeURIComponent(JSON.stringify(DEFAULT_COOKIE_CONSENT)), 365);\n  }\n}\n\nfunction addCookieBannerEventHandlers() {\n  document.querySelector(selectors.acceptBtn).addEventListener(\"click\", () => {\n    acceptCookies();\n  });\n\n  document.querySelector(selectors.rejectBtn).addEventListener(\"click\", () => {\n    rejectCookies();\n  });\n\n  document.querySelector(selectors.hideBannerBtn).addEventListener(\"click\", () => {\n    hideCookieBanner();\n  });\n}\n\nexport default function initCookieBanner() {\n  setDefaultCookies();\n  addCookieBannerEventHandlers();\n}\n\n// need to add gtm classes to button in view, depending on cookie acceptance status\n\n// need datalayer push for accept & reject cookies\n\n// make confirmation banner accessible - e.g. focus or live region?", "import initCookieBanner from \"./components/cookie-banner\";\n\ntry {\n    initCookieBanner();\n} catch (error) {\n    throw error\n}"],
  "mappings": "MAAA,IAAMA,EAAY,CAChB,aAAc,oBACd,UAAW,mCACX,UAAW,mCACX,yBAA0B,yCAC1B,6BAA8B,0CAC9B,0BAA2B,yCAC3B,0BAA2B,yCAC3B,cAAe,gCACjB,EAEMC,EAAe,SAAS,cAAcD,EAAU,YAAY,EAElE,SAASE,EAAUC,EAAOC,EAAQC,EAAQ,CAExC,IAAMC,EAAI,IAAI,KACdA,EAAE,QAAQA,EAAE,QAAQ,EAAKD,EAAO,GAAG,GAAG,GAAG,GAAK,EAC9C,IAAIE,EAAU,WAAYD,EAAE,YAAY,EACxC,SAAS,OAASH,EAAQ,IAAMC,EAAS,IAAMG,EAAU,SAC3D,CAEA,SAASC,EAAUC,EAAM,CACvB,IAAMC,EAAS,GAAGD,CAAI,IAChBE,EAAU,SAAS,OAAO,MAAM,GAAG,EACzC,QAASC,EAAI,EAAGC,EAAMF,EAAQ,OAAQC,EAAIC,EAAKD,IAAK,CAClD,IAAIE,EAASH,EAAQC,CAAC,EACtB,KAAOE,EAAO,OAAO,CAAC,IAAM,KAC1BA,EAASA,EAAO,UAAU,EAAGA,EAAO,MAAM,EAE5C,GAAIA,EAAO,QAAQJ,CAAM,IAAM,EAC7B,OAAO,mBAAmBI,EAAO,UAAUJ,EAAO,MAAM,CAAC,CAE7D,CACA,OAAO,IACT,CAEA,IAAMK,EAAgB,IAAM,CAC1Bb,EAAU,oBAAqB,mBAAmB,KAAK,UAAU,CAC/D,UAAW,GACX,WAAY,EACd,CAAC,CAAC,EAAG,GAAG,EACRA,EAAU,wBAAyB,GAAM,GAAG,EAC5Cc,EAAwB,EACxB,SAAS,cAAchB,EAAU,yBAAyB,EAAE,OAAS,EACvE,EAEMiB,EAAgB,IAAM,CAC1Bf,EAAU,oBAAqB,mBAAmB,KAAK,UAAUgB,CAAsB,CAAC,EAAG,GAAG,EAC9FhB,EAAU,wBAAyB,GAAM,GAAG,EAC5Cc,EAAwB,EACxB,SAAS,cAAchB,EAAU,yBAAyB,EAAE,OAAS,EACvE,EAEMkB,EAAyB,CAC7B,UAAW,GACX,WAAY,EACd,EAEA,SAASC,GAAmB,CAC1BlB,EAAa,OAAS,EACxB,CAEA,SAASe,GAA0B,CACjC,IAAMI,EAA+B,SAAS,cAAcpB,EAAU,4BAA4B,EAClG,SAAS,cAAcA,EAAU,wBAAwB,EAAE,OAAS,GACpEoB,EAA6B,OAAS,GACtCA,EAA6B,MAAM,EACnCnB,EAAa,UAAU,IAAI,8BAA8B,CAC3D,CAEA,SAASoB,GAAoB,CACxBb,EAAU,uBAAuB,EAClCW,EAAiB,GAEjBlB,EAAa,OAAS,GACtBC,EAAU,oBAAqB,mBAAmB,KAAK,UAAUgB,CAAsB,CAAC,EAAG,GAAG,EAElG,CAEA,SAASI,GAA+B,CACtC,SAAS,cAActB,EAAU,SAAS,EAAE,iBAAiB,QAAS,IAAM,CAC1Ee,EAAc,CAChB,CAAC,EAED,SAAS,cAAcf,EAAU,SAAS,EAAE,iBAAiB,QAAS,IAAM,CAC1EiB,EAAc,CAChB,CAAC,EAED,SAAS,cAAcjB,EAAU,aAAa,EAAE,iBAAiB,QAAS,IAAM,CAC9EmB,EAAiB,CACnB,CAAC,CACH,CAEe,SAARI,GAAoC,CACzCF,EAAkB,EAClBC,EAA6B,CAC/B,CC9FA,GAAI,CACAE,EAAiB,CACrB,OAASC,EAAO,CACZ,MAAMA,CACV",
  "names": ["selectors", "cookieBanner", "setCookie", "cname", "cvalue", "exdays", "d", "expires", "getCookie", "name", "nameEQ", "cookies", "i", "len", "cookie", "acceptCookies", "showConfirmationMessage", "rejectCookies", "DEFAULT_COOKIE_CONSENT", "hideCookieBanner", "confirmationMessageContainer", "setDefaultCookies", "addCookieBannerEventHandlers", "initCookieBanner", "initCookieBanner", "error"]
}
